name: Packaging(MacOS)

on:
  push:
    branches:
      - master
      - macos-universal
    paths-ignore:
      - 'README.md'
      - 'LICENSE'

  pull_request:
    paths-ignore:
      - 'README.md'
      - 'LICENSE'

env:
  PRODUCT: flameshot

jobs:
  bigsur:
    name: macOS Big Sur 11
    runs-on: macos-11

    env:
      APP_NAME: flameshot
      DIR_BULD: build
      DIR_PKG: build/src
      HELPERS_SCRIPTS_PATH: ../../packaging/macos
      # Apple developer identity, example: "Developer ID Application: <user name> (code)"
      # Note: no signing and notarization will be be proceed if this variable is not set
      APPLE_DEV_IDENTITY: ${{ secrets.APPLE_DEV_IDENTITY }}
      # Apple ID user
      APPLE_DEV_USER: ${{ secrets.APPLE_DEV_USER }}
      # Apple ID user password
      APPLE_DEV_PASS: ${{ secrets.APPLE_DEV_PASS }}
      # Apple certificate with private and public keys in base64 format
      APPLE_DEVELOPER_ID_APPLICATION_CERT_DATA: ${{ secrets.APPLE_DEVELOPER_ID_APPLICATION_CERT_DATA }}
      # Apple certificate password
      APPLE_DEVELOPER_ID_APPLICATION_CERT_PASS: ${{ secrets.APPLE_DEVELOPER_ID_APPLICATION_CERT_PASS }}
      # Any temporary password for keychain, which will be created on github actions CI
      APPLE_TEMP_CI_KEYCHAIN_PASS: ${{ secrets.APPLE_TEMP_CI_KEYCHAIN_PASS }}
      # Temporary variable for internal use, it will be set on the "Build dmg" step
      NOTARIZATION_CHECK: false

    steps:
      - name: Checkout Source code
        uses: actions/checkout@v1

      - name: Install Qt5 Universal
        shell: bash
        run: |
          brew install qt@5 cmake
          brew link --force qt@5

          mkdir -pv "${HOME}/.local/bin"
          export PATH="${HOME}/.local/bin:$PATH"
          git clone https://github.com/nedrysoft/makeuniversal.git
          cd makeuniversal
          qmake
          make
          chmod +x ./makeuniversal
          mv ./makeuniversal $HOME/.local/bin/makeuniversal
          cd ..
          rm -rf makeuniversal
          which makeuniversal

          cd ${RUNNER_TEMP}
          curl -L -H "Authorization: Bearer QQ==" -o qt5-arm64.tar.gz https://ghcr.io/v2/homebrew/core/qt/5/blobs/sha256:79d1822773a193d84cb2426364681dd3d1f1659fd07566665474f941ab61c879
          mkdir qt5-arm64
          tar xzf qt5-arm64.tar.gz --directory qt5-arm64

          mkdir -pv "${HOME}/.local/bin/qt5-fat"
          export PATH="${HOME}/.local/bin/qt5-fat/bin:$PATH"

          makeuniversal "${HOME}/.local/bin/qt5-fat" "$(brew --prefix)/Cellar/qt@5/5.15.2_1" "${RUNNER_TEMP}/qt5-arm64/qt@5/5.15.2_1"
          # cp -PR "${HOME}/.local/bin/qt5-fat" "$(brew --prefix)/Cellar/qt@5/5.15.2_1"
          file $(which qmake)
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          echo "$HOME/.local/bin/qt5-fat/bin" >> $GITHUB_PATH

      - name: Configure
        shell: bash
        run: |
          brew unlink qt@5
          brew remove qt@5
          file $(which qmake)
          mkdir -p "${DIR_BULD}"
          cd "${DIR_BULD}"
          rm -rf ./src/flameshot.dmg ./src/flameshot.app/
          cmake .. -DQt5_DIR=$HOME/.local/bin/qt5-fat/lib/cmake/Qt5

      - name: Compile
        shell: bash
        run: |
          cd "${DIR_BULD}"
          make -j $(sysctl -n hw.ncpu)

      - name: Create key-chain and import certificate
        run: |
          cd "${DIR_PKG}"
          ${HELPERS_SCRIPTS_PATH}/create_keychain.sh flameshot

      - name: Build dmg package
        run: |
          cd "${DIR_PKG}"
          ${HELPERS_SCRIPTS_PATH}/sign_qtapp.sh flameshot

      - name: Upload dmg package
        shell: bash
        run: |
          python3 -m pip install -U -q requests
          echo "================MacOS dmg image download link================"
          echo $(python3 $GITHUB_WORKSPACE/scripts/upload_services/transferwee.py upload $GITHUB_WORKSPACE/build/src/flameshot.dmg)
          echo "=====no operation for you can see link in the log console====="

      - name: Artifact Upload
        uses: actions/upload-artifact@v2
        with:
          name: MacOS-artifact
          path: ${{ github.workspace }}/build/src/flameshot.dmg

      - name: Notarization status
        shell: bash
        run: |
          if [[ "${NOTARIZATION_CHECK}" == "true" ]]; then
            echo "Notarization check succeed"
          else
            echo "::warning Notarization check failed"
            # exit 1
          fi
